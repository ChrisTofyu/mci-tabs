{"version":3,"file":"webpack.mjs","names":["options: Partial<UserOptions>","compiler: Compiler","inputs: JsonReport[ 'inputs' ]","modules: Array<StatsModule>","module: StatsModule"],"sources":["../src/entrypoints/webpack.ts"],"sourcesContent":["import { resolve } from 'path';\nimport {\n\tgenerateReportFromAssets,\n\tjsRegexp,\n\tnormalizePath,\n\ttype JsonReport,\n\ttype ModuleFormat,\n\ttype UserOptions\n} from '../index.js';\nimport type { Compiler, StatsModule } from 'webpack';\n\nexport default class SondaWebpackPlugin {\n\toptions: Partial<UserOptions>;\n\n\tconstructor ( options: Partial<UserOptions> = {} ) {\n\t\tthis.options = options;\n\t}\n\n\tapply( compiler: Compiler ): void {\n\t\tif (this.options.enabled === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcompiler.options.output.devtoolModuleFilenameTemplate = '[absolute-resource-path]';\n\n\t\tcompiler.hooks.afterEmit.tapPromise( 'SondaWebpackPlugin', compilation => {\n\t\t\tconst inputs: JsonReport[ 'inputs' ] = {};\n\t\t\tconst stats = compilation.getStats().toJson( {\n\t\t\t\tmodules: true,\n\t\t\t\tprovidedExports: true,\n\t\t\t} );\n\n\t\t\tconst outputPath = stats.outputPath || compiler.outputPath;\n\t\t\tconst modules: Array<StatsModule> = stats.modules\n\t\t\t\t?.flatMap( mod => mod.modules ? [ mod, ...mod.modules ] : mod )\n\t\t\t\t.filter( mod => mod.nameForCondition && !mod.codeGenerated )\n\t\t\t\t.filter( ( mod, index, self ) => self.findIndex( m => m.nameForCondition === mod.nameForCondition ) === index )\n\t\t\t\t|| [];\n\n\t\t\tmodules.forEach( module => {\n\t\t\t\tconst imports = modules.reduce( ( acc, { nameForCondition, issuerName, reasons } ) => {\n\t\t\t\t\tif ( issuerName === module.name || reasons?.some( reason => reason.resolvedModule === module.name ) ) {\n\t\t\t\t\t\tacc.push( normalizePath( nameForCondition! ) );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn acc;\n\t\t\t\t}, [] as Array<string> );\n\n\t\t\t\tinputs[ normalizePath( module.nameForCondition! ) ] = {\n\t\t\t\t\tbytes: module.size || 0,\n\t\t\t\t\tformat: getFormat( module ),\n\t\t\t\t\timports,\n\t\t\t\t\tbelongsTo: null\n\t\t\t\t};\n\t\t\t} );\n\n\t\t\treturn generateReportFromAssets(\n\t\t\t\tstats.assets?.map( asset => resolve( outputPath, asset.name ) ) || [],\n\t\t\t\tinputs,\n\t\t\t\tthis.options\n\t\t\t);\n\t\t} );\n\t}\n}\n\nfunction getFormat( module: StatsModule ): ModuleFormat {\n\tif ( !jsRegexp.test( module.nameForCondition! ) ) {\n\t\treturn 'unknown';\n\t}\n\n\t/**\n\t * Sometimes ESM modules have `moduleType` set as `javascript/auto`, so we\n\t * also need to check if the module has exports to determine if it's ESM.\n\t */\n\tif ( module.moduleType === 'javascript/esm' || !!module.providedExports?.length ) {\n\t\treturn 'esm';\n\t}\n\n\treturn 'cjs';\n}\n"],"mappings":";;;;IAWqB,qBAAN,MAAyB;CACvC;CAEA,YAAcA,UAAgC,CAAE,GAAG;AAClD,OAAK,UAAU;CACf;CAED,MAAOC,UAA2B;AACjC,MAAI,KAAK,QAAQ,YAAY,MAC5B;AAGD,WAAS,QAAQ,OAAO,gCAAgC;AAExD,WAAS,MAAM,UAAU,WAAY,sBAAsB,iBAAe;GACzE,MAAMC,SAAiC,CAAE;GACzC,MAAM,QAAQ,YAAY,UAAU,CAAC,OAAQ;IAC5C,SAAS;IACT,iBAAiB;GACjB,EAAE;GAEH,MAAM,aAAa,MAAM,cAAc,SAAS;GAChD,MAAMC,UAA8B,MAAM,SACvC,QAAS,SAAO,IAAI,UAAU,CAAE,KAAK,GAAG,IAAI,OAAS,IAAG,IAAK,CAC9D,OAAQ,SAAO,IAAI,qBAAqB,IAAI,cAAe,CAC3D,OAAQ,CAAE,KAAK,OAAO,SAAU,KAAK,UAAW,OAAK,EAAE,qBAAqB,IAAI,iBAAkB,KAAK,MAAO,IAC5G,CAAE;AAEN,WAAQ,QAAS,YAAU;IAC1B,MAAM,UAAU,QAAQ,OAAQ,CAAE,KAAK,EAAE,kBAAkB,YAAY,SAAS,KAAM;AACrF,SAAK,eAAe,OAAO,QAAQ,SAAS,KAAM,YAAU,OAAO,mBAAmB,OAAO,KAAM,CAClG,KAAI,KAAM,cAAe,iBAAmB,CAAE;AAG/C,YAAO;IACP,GAAE,CAAE,EAAmB;AAExB,WAAQ,cAAe,OAAO,iBAAmB,IAAK;KACrD,OAAO,OAAO,QAAQ;KACtB,QAAQ,UAAW,OAAQ;KAC3B;KACA,WAAW;IACX;GACD,EAAE;AAEH,UAAO,yBACN,MAAM,QAAQ,IAAK,WAAS,QAAS,YAAY,MAAM,KAAM,CAAE,IAAI,CAAE,GACrE,QACA,KAAK,QACL;EACD,EAAE;CACH;AACD;AAED,SAAS,UAAWC,QAAoC;AACvD,MAAM,SAAS,KAAM,OAAO,iBAAmB,CAC9C,QAAO;;;;;AAOR,KAAK,OAAO,eAAe,sBAAsB,OAAO,iBAAiB,OACxE,QAAO;AAGR,QAAO;AACP"}