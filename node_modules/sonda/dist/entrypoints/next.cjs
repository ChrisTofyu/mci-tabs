"use strict";
require('../src.cjs');
const require_webpack = require('../webpack.cjs');

//#region src/entrypoints/next.ts
function SondaNextPlugin(options = {}) {
	return function Sonda(nextConfig = {}) {
		if (options.enabled === false) return nextConfig;
		options.format ??= "html";
		options.filename ??= `sonda-report-[env].${options.format}`;
		if (!options.filename.includes("[env]")) throw new Error("SondaNextPlugin: The \"filename\" option must include the \"[env]\" token.");
		const generateForServer = options.server ?? false;
		return Object.assign({}, nextConfig, { webpack(config, { nextRuntime, isServer }) {
			const env = nextRuntime || "client";
			if (env === "edge" || isServer && !generateForServer) return config;
			const sondaOptions = Object.assign({}, options);
			sondaOptions.filename = sondaOptions.filename.replace("[env]", env);
			config.plugins.push(new require_webpack.SondaWebpackPlugin(sondaOptions));
			return config;
		} });
	};
}

//#endregion
module.exports = SondaNextPlugin;
//# sourceMappingURL=next.cjs.map