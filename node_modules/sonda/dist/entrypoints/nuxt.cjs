"use strict";
require('../src.cjs');
const require_rollup = require('../rollup.cjs');

//#region src/entrypoints/nuxt.ts
function SondaNuxtPlugin(options = {}) {
	return function SondaNuxtPlugin$1(_, nuxt) {
		if (options.enabled === false) return;
		options.format ??= "html";
		options.filename ??= `sonda-report-[env].${options.format}`;
		if (!options.filename.includes("[env]")) throw new Error("SondaNuxtPlugin: The \"filename\" option must include the \"[env]\" token.");
		nuxt.hook("vite:extendConfig", (config, { isClient, isServer }) => {
			const env = isClient ? "client" : "nitro";
			const generateForServer = options.server ?? false;
			if (isServer && !generateForServer) return;
			const sondaOptions = Object.assign({}, options);
			sondaOptions.filename = sondaOptions.filename.replace("[env]", env);
			config.plugins ??= [];
			config.plugins.push(require_rollup.SondaRollupPlugin(sondaOptions));
		});
	};
}

//#endregion
module.exports = SondaNuxtPlugin;
//# sourceMappingURL=nuxt.cjs.map