{"version":3,"file":"astro.cjs","names":["options: Partial<FrameworkUserOptions>"],"sources":["../../src/entrypoints/astro.ts"],"sourcesContent":["import Sonda from './rollup';\nimport type { AstroIntegration } from 'astro';\nimport type { FrameworkUserOptions } from '../types';\n\nexport default function SondaAstroPlugin( options: Partial<FrameworkUserOptions> = {} ): AstroIntegration {\n  return {\n    name: 'sonda/astro',\n    hooks: {\n      'astro:build:setup'( { vite, target } ) {\n        if ( options.enabled === false ) {\n          return;\n        }\n\n        options.format ??= 'html';\n        options.filename ??= `sonda-report-[env].${ options.format }`;\n\n        // Nuxt runs few builds and each must generate a separate report\n        if ( !options.filename.includes( '[env]' ) ) {\n          throw new Error( 'SondaAstroPlugin: The \"filename\" option must include the \"[env]\" token.' );\n        }\n\n        const generateForServer = options.server ?? false;\n\n        // Do not generate report for the server build unless explicitly enabled\n        if ( target === 'server' && !generateForServer ) {\n          return;\n        }\n\n        // Because this configuration is shared between multiple builds, we need to clone it\n        const sondaOptions = Object.assign( {}, options );\n\n        // Replace the \"[env]\" token with the current build type\n        sondaOptions.filename = sondaOptions.filename!.replace( '[env]', target )\n\n        vite.plugins ??= [];\n        vite.plugins.push( Sonda( sondaOptions ) );\n      }\n    }\n  };\n}\n"],"mappings":";;;;;AAIe,SAAS,iBAAkBA,UAAyC,CAAE,GAAqB;AACxG,QAAO;EACL,MAAM;EACN,OAAO,EACL,oBAAqB,EAAE,MAAM,QAAQ,EAAG;AACtC,OAAK,QAAQ,YAAY,MACvB;AAGF,WAAQ,WAAW;AACnB,WAAQ,cAAc,qBAAsB,QAAQ,OAAQ;AAG5D,QAAM,QAAQ,SAAS,SAAU,QAAS,CACxC,OAAM,IAAI,MAAO;GAGnB,MAAM,oBAAoB,QAAQ,UAAU;AAG5C,OAAK,WAAW,aAAa,kBAC3B;GAIF,MAAM,eAAe,OAAO,OAAQ,CAAE,GAAE,QAAS;AAGjD,gBAAa,WAAW,aAAa,SAAU,QAAS,SAAS,OAAQ;AAEzE,QAAK,YAAY,CAAE;AACnB,QAAK,QAAQ,KAAM,iCAAO,aAAc,CAAE;EAC3C,EACF;CACF;AACF"}