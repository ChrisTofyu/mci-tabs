"use strict";
const require_src = require('./src.cjs');
const path = require_src.__toESM(require("path"));

//#region src/entrypoints/rollup.ts
function SondaRollupPlugin(options = {}) {
	let inputs = {};
	return {
		name: "sonda",
		moduleParsed(module$1) {
			if (options.enabled === false) return;
			inputs[require_src.normalizePath(module$1.id)] = {
				bytes: module$1.code ? Buffer.byteLength(module$1.code) : 0,
				format: getFormat(module$1.id, module$1.meta.commonjs?.isCommonJS),
				imports: module$1.importedIds.map((id) => require_src.normalizePath(id)),
				belongsTo: null
			};
		},
		writeBundle({ dir, file }, bundle) {
			if (options.enabled === false) return;
			const outputDir = (0, path.resolve)(process.cwd(), dir ?? (0, path.dirname)(file));
			const assets = Object.keys(bundle).map((name) => (0, path.resolve)(outputDir, name));
			return require_src.generateReportFromAssets(assets, inputs, options);
		}
	};
}
function getFormat(moduleId, isCommonJS) {
	if (isCommonJS === true || require_src.cjsRegex.test(moduleId)) return "cjs";
	if (isCommonJS === false || require_src.jsRegexp.test(moduleId)) return "esm";
	return "unknown";
}

//#endregion
Object.defineProperty(exports, 'SondaRollupPlugin', {
  enumerable: true,
  get: function () {
    return SondaRollupPlugin;
  }
});
//# sourceMappingURL=rollup.cjs.map