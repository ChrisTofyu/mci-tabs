import { cjsRegex, generateReportFromAssets, jsRegexp, normalizePath } from "./src.mjs";
import { dirname, resolve } from "path";

//#region src/entrypoints/rollup.ts
function SondaRollupPlugin(options = {}) {
	let inputs = {};
	return {
		name: "sonda",
		moduleParsed(module) {
			if (options.enabled === false) return;
			inputs[normalizePath(module.id)] = {
				bytes: module.code ? Buffer.byteLength(module.code) : 0,
				format: getFormat(module.id, module.meta.commonjs?.isCommonJS),
				imports: module.importedIds.map((id) => normalizePath(id)),
				belongsTo: null
			};
		},
		writeBundle({ dir, file }, bundle) {
			if (options.enabled === false) return;
			const outputDir = resolve(process.cwd(), dir ?? dirname(file));
			const assets = Object.keys(bundle).map((name) => resolve(outputDir, name));
			return generateReportFromAssets(assets, inputs, options);
		}
	};
}
function getFormat(moduleId, isCommonJS) {
	if (isCommonJS === true || cjsRegex.test(moduleId)) return "cjs";
	if (isCommonJS === false || jsRegexp.test(moduleId)) return "esm";
	return "unknown";
}

//#endregion
export { SondaRollupPlugin };
//# sourceMappingURL=rollup.mjs.map